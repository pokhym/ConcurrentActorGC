load ./actor.maude


--- This is used to make sure that counter increments everytime we call it
set clear rules off .

******* TEST COUNTER *******
--- rew counter . --- 0
--- rew counter . --- 1
--- rew counter . --- 2
--- rew counter counter . --- 3 4

******* TEST referenceList in ACTOR *******
--- red (0 :: 1 -> 2 ) , (3 :: 4 -> 5) , (6 :: 7 -> 8) .

******* TEST newActor in ACTOR *******
--- red newActor(0, mtRef) .

******* TEST Msg in ACTOR *******
--- red @ A:MsgType :: B:ActorList :: C:ReferenceList :: D:MsgList @ .

--- red @ A:MsgType :: B:Actor C:ActorList :: D:ReferenceList :: E:Msg F:MsgList @ .

******* TEST spawn in ACTOR *******
--- red spawn(0, mtRef) .

******* TEST createRef in ACTOR *******
--- red createRef(15, (0 :: 1 -> 2) , (3 :: 4 -> 5) ) .

******* TEST receive in ACTOR *******
--- red receive(newActor(0, mtRef), (5 :: 6 -> 7)) .

******* TEST release in ACTOR *******
--- remove from a reference list that is longer than 1
--- red release(< i: 0 | sn: 0 | r: (3 :: 4 -> 5), (0 :: 1 -> 2) | dr: mtRef | o: mtRef | ro: mtRef | m: mtRef | oa: mtRef >, 0 :: 1 -> 2) .
--- --- remove from a reference list that is length 1
--- red release(< i: 0 | sn: 0 | r: (0 :: 1 -> 2) | dr: mtRef | o: mtRef | ro: mtRef | m: mtRef | oa: mtRef >, 0 :: 1 -> 2) .

******* TEST getRefsTarget in ACTOR *******
--- red realeasingEquiv(0, (1 :: 2 -> 0)) .
--- red realeasingEquiv(0, (1 :: 2 -> 2)) .
--- red releasingRefList(0, ( (1 :: 2 -> 0), (3 :: 4 -> 5) ) ) .
--- red releasingRefList(0, ( (3 :: 4 -> 5), (1 :: 2 -> 0) ) ) .
--- red releasingRefList(0, ( (1 :: 2 -> 0) ) ) .
--- red releasingRefList(0, ( (3 :: 4 -> 5) ) ) .
--- red releasingRefList(0, mtRefList) .
--- red releasingRefList(0, mtRef) .

******* TEST inRefList in ACTOR *******
--- red 0 :: 0 -> 0 inRefList mtRefList .
--- red 0 :: 0 -> 0 inRefList (1 :: 1 -> 1), (0 :: 0 -> 0), (2 :: 2 -> 2) .
--- red 0 :: 0 -> 0 inRefList (1 :: 1 -> 1), (3 :: 0 -> 0), (2 :: 2 -> 2) .
--- red mtRef inRefList (1 :: 1 -> 1), (3 :: 0 -> 0), (2 :: 2 -> 2) .
--- red mtRef inRefList mtRefList .

******* TEST createdRefList in ACTOR *******
--- red createdRefList(0, mtRefList, mtRefList) .
--- red createdRefList(0, mtRefList, 0 :: 0 -> 0) .
--- red createdRefList(0, 0 :: 0 -> 0, mtRefList) .
--- red createdRefList(0, 0 :: 0 -> 0, 0 :: 0 -> 0) .
--- red createdRefList(0, 0 :: 0 -> 0, 0 :: 0 -> 1) .
--- red createdRefList(0, ((1 :: 1 -> 1), (0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (5 :: 5 -> 5))) .
--- red createdRefList(0, ((1 :: 1 -> 1), (0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (2 :: 2 -> 0))) .
--- red createdRefList(0, ((0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (2 :: 2 -> 0))) .

******* TEST sentRefList in ACTOR *******
--- red sentRefList(0, mtRefList, mtRefList) .
--- red sentRefList(0, mtRefList, 0 :: 0 -> 0) .
--- red sentRefList(0, 0 :: 0 -> 0, mtRefList) .
--- red sentRefList(0, 0 :: 0 -> 0, 0 :: 0 -> 0) .
--- red sentRefList(0, 0 :: 0 -> 0, 0 :: 0 -> 1) .
--- red sentRefList(0, ((1 :: 1 -> 1), (0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (5 :: 5 -> 5))) .
--- red sentRefList(0, ((1 :: 1 -> 1), (0 :: 1 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (2 :: 0 -> 2))) .
--- red sentRefList(0, ((1 :: 1 -> 1), (0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (2 :: 0 -> 2))) .
--- red sentRefList(0, ((0 :: 0 -> 0), (2 :: 2 -> 0), (3 :: 3 -> 3)), ((4 :: 4 -> 4), (2 :: 2 -> 0))) .

******* TEST updateInfo in ACTOR *******
--- testing releasing
--- --- remove from DR
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: (2 :: 3 -> 1), (3 :: 4 -> 5) | o: mtRefList | ro: mtRefList | m: mtRefList | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: (2 :: 3 -> 0), (2 :: 3 -> 1) | o: mtRefList | ro: mtRefList | m: mtRefList | tr: mtRefList | owr: mtRefList |oa: empty >, 1) .
--- --- does not remove from DR
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: (2 :: 3 -> 0), (2 :: 3 -> 5) | o: mtRefList | ro: mtRefList | m: mtRefList | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- --- add to target releasing
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (2 :: 3 -> 1) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (3 :: 4 -> 5), (2 :: 3 -> 1) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- --- does not add to target releasing
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (2 :: 3 -> 2) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (3 :: 4 -> 5), (2 :: 3 -> 3) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- --- add to owner_releasing
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (2 :: 3 -> 1) | tr: mtRefList | owr: mtRefList | oa: empty >, 3) .
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (3 :: 4 -> 5), (2 :: 3 -> 1) | tr: mtRefList | owr: mtRefList | oa: empty >, 3) .
--- --- does not add to owner_releasing
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (2 :: 3 -> 2) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: mtRefList | o: mtRefList | ro: mtRefList | m: (3 :: 4 -> 5), (2 :: 3 -> 3) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
--- --- add to onAck from everything
--- --- TODO: NEEDS MORE TESTING
--- --- dr: should contain only 2 :: 2 -> 2
--- --- tr: should contain (3 :: 3 -> 1),(4 :: 4 -> 1)
--- --- owr: should contain (5 :: 1 -> 3)
--- --- sn: should be 1
--- --- oa: should contain (2 :: 2 -> 2),(3 :: 3 -> 1),(4 :: 4 -> 1),(5 :: 1 -> 3)
red updateInfo(< i: 0 | sn: 0 | r: mtRefList | dr: (0 :: 0 -> 1),(1 :: 1 -> 1),(2 :: 2 -> 2) | o: mtRefList | ro: mtRefList | m: (3 :: 3 -> 1),(4 :: 4 -> 1),(5 :: 1 -> 3),(6 :: 6 -> 7) | tr: mtRefList | owr: mtRefList | oa: empty >, 1) .
